[{"C:\\Users\\lucas\\Desktop\\beautysoft-frontend\\src\\index.tsx":"1","C:\\Users\\lucas\\Desktop\\beautysoft-frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\lucas\\Desktop\\beautysoft-frontend\\src\\App.tsx":"3","C:\\Users\\lucas\\Desktop\\beautysoft-frontend\\src\\Pages\\Login\\index.tsx":"4","C:\\Users\\lucas\\Desktop\\beautysoft-frontend\\src\\Pages\\Procedimentos\\index.tsx":"5","C:\\Users\\lucas\\Desktop\\beautysoft-frontend\\src\\Pages\\Home\\index.tsx":"6","C:\\Users\\lucas\\Desktop\\beautysoft-frontend\\src\\Pages\\Voucher\\index.tsx":"7","C:\\Users\\lucas\\Desktop\\beautysoft-frontend\\src\\Components\\Body\\index.tsx":"8","C:\\Users\\lucas\\Desktop\\beautysoft-frontend\\src\\Components\\Table\\index.tsx":"9","C:\\Users\\lucas\\Desktop\\beautysoft-frontend\\src\\Components\\Menu\\index.tsx":"10","C:\\Users\\lucas\\Desktop\\beautysoft-frontend\\src\\Pages\\Register\\index.tsx":"11","C:\\Users\\lucas\\Desktop\\beautysoft-frontend\\src\\Pages\\CadastroMensagem\\index.tsx":"12","C:\\Users\\lucas\\Desktop\\beautysoft-frontend\\src\\Components\\Mensagens\\index.tsx":"13"},{"size":554,"mtime":1695859466608,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":1695859465995,"results":"16","hashOfConfig":"15"},{"size":850,"mtime":1699219080990,"results":"17","hashOfConfig":"15"},{"size":2099,"mtime":1699221885243,"results":"18","hashOfConfig":"15"},{"size":8491,"mtime":1699227606993,"results":"19","hashOfConfig":"15"},{"size":233,"mtime":1697298430614,"results":"20","hashOfConfig":"15"},{"size":6012,"mtime":1699227607971,"results":"21","hashOfConfig":"15"},{"size":4846,"mtime":1699227609942,"results":"22","hashOfConfig":"15"},{"size":1290,"mtime":1697411837555,"results":"23","hashOfConfig":"15"},{"size":1996,"mtime":1699227604671,"results":"24","hashOfConfig":"15"},{"size":2854,"mtime":1699221915322,"results":"25","hashOfConfig":"15"},{"size":8290,"mtime":1699289370323,"results":"26","hashOfConfig":"15"},{"size":538,"mtime":1699224167367,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7c93sj",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\lucas\\Desktop\\beautysoft-frontend\\src\\index.tsx",[],[],"C:\\Users\\lucas\\Desktop\\beautysoft-frontend\\src\\reportWebVitals.ts",[],[],"C:\\Users\\lucas\\Desktop\\beautysoft-frontend\\src\\App.tsx",[],[],"C:\\Users\\lucas\\Desktop\\beautysoft-frontend\\src\\Pages\\Login\\index.tsx",["70"],[],"C:\\Users\\lucas\\Desktop\\beautysoft-frontend\\src\\Pages\\Procedimentos\\index.tsx",["71","72"],[],"import React, { useEffect, useState } from 'react';\r\nimport styles from './procedimentos.module.css';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport Table from '../../Components/Table';\r\nimport { LiaToggleOffSolid, LiaToggleOnSolid } from 'react-icons/lia';\r\nimport Config from '../../Config.json';\r\n\r\nconst Procedimentos: React.FC = () => {\r\n  const [nome, setNome] = useState<string>('');\r\n  const [valor, setValor] = useState<string>('');\r\n  const [descricao, setDescricao] = useState<string>('');\r\n  const [tipoProcedimento, setTipoProcedimento] = useState<number>(1);\r\n  const [imagem, setImagem] = useState<File | null>(null);\r\n  const [data, setData] = useState([]);\r\n  const [alterar, setAlterar] = useState<boolean>(false);\r\n  const [row, setRow] = useState<number>();\r\n  const [nomeError, setNomeError] = useState<string | null>(null);\r\n  const [descricaoError, setDescricaoError] = useState<string | null>(null);\r\n  const [valorError, setValorError] = useState<string | null>(null);\r\n  const [habilitado, setHabilitado] = useState<boolean>(true);\r\n  const [refresh, setRefresh] = useState<boolean>(false);\r\n\r\n  const handleImagemChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      if (e.target.files && e.target.files[0].type.startsWith('image/')) {\r\n        setImagem(e.target.files[0]);\r\n      } else {\r\n        setImagem(null);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleClickCadastro = () => {\r\n\r\n    setNomeError(nome ? null : \"Nome é obrigatório!\");\r\n    setDescricaoError(descricao ? null : \"Descrição é obrigatória!\");\r\n    setValorError(valor ? null : \"Valor é obrigatório!\");\r\n\r\n    const filter = {\r\n      nome,\r\n      descricao,\r\n      valor,\r\n      inserirArquivo: 'Temporária',\r\n      tipoProcedimento,\r\n    }\r\n\r\n    const apiUrl = `${Config.baseUrl}/api/Procedimento`;\r\n\r\n    axios.post(apiUrl, filter)\r\n      .then((_response) => {\r\n        setRefresh(!refresh)\r\n        limpar();\r\n        console.log('Procedimento cadastrado com sucesso!');\r\n      })\r\n      .catch((error) => {\r\n        console.error('Erro ao cadastrar procedimento:', error);\r\n      });\r\n  }\r\n\r\n  const handleClickAlterar = () => {\r\n\r\n    setNomeError(nome ? null : \"Nome é obrigatório!\");\r\n    setDescricaoError(descricao ? null : \"Descrição é obrigatória!\");\r\n    setValorError(valor ? null : \"Valor é obrigatório!\");\r\n\r\n    const filter = {\r\n      nome,\r\n      descricao,\r\n      valor,\r\n      inserirArquivo: 'Temporária',\r\n      tipoProcedimento,\r\n    }\r\n\r\n    const apiUrl = `${Config.baseUrl}/api/Procedimento/${row}`;\r\n\r\n    axios.put(apiUrl, filter)\r\n      .then((_response) => {\r\n        console.log('Procedimento alterado com sucesso!');\r\n        setRefresh(!refresh);\r\n        setAlterar(false);\r\n        limpar();\r\n      })\r\n      .catch((error) => {\r\n        console.error('Erro ao alterar procedimento:', error);\r\n      });\r\n  }\r\n\r\n  function limpar() {\r\n    setNome('');\r\n    setDescricao('');\r\n    setValor('');\r\n    setTipoProcedimento(1);\r\n    setImagem(null);\r\n  }\r\n\r\n  const run = () => {\r\n    const apiUrl = `${Config.baseUrl}/api/Procedimento`;\r\n\r\n    axios.get(apiUrl)\r\n      .then((response) => {\r\n        console.log('Procedimentos exibidos com sucesso!');\r\n        const modifiedData = response.data.map((item: any) => {\r\n          return {\r\n            Nome: item.nome,\r\n            id: item.id,\r\n            Descrição: item.descricao,\r\n            \"Tipo de Procedimento\": item.tipoProcedimento === 1 ? 'Corporal' : 'Facial',\r\n            Imagem: item.inserirArquivo,\r\n            Valor: ` R$ ${item.valor}`,\r\n          };\r\n        });\r\n\r\n        setData(modifiedData);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Erro ao buscar procedimentos:', error);\r\n      });\r\n  };\r\n\r\n  const handleDelete = (index: number) => {\r\n    const confirmDelete = window.confirm('Tem certeza de que deseja excluir este procedimento?');\r\n\r\n    if (confirmDelete) {\r\n      const apiUrl = `${Config.baseUrl}/api/Procedimento/${index}`;\r\n\r\n      axios.delete(apiUrl)\r\n        .then((_response) => {\r\n          setRefresh(!refresh);\r\n          console.log('Procedimento deletado com sucesso!');\r\n        })\r\n        .catch((error) => {\r\n          console.error('Erro ao deletar procedimento:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleEdit = (index: number) => {\r\n    setAlterar(true);\r\n    setRow(index);\r\n\r\n    const apiUrl = `${Config.baseUrl}/api/Procedimento/${index}`;\r\n\r\n    if (nome && descricao && valor) {\r\n      axios.get(apiUrl)\r\n        .then((response) => {\r\n          setNome(response.data.nome);\r\n          setDescricao(response.data.descricao);\r\n          setValor(response.data.valor);\r\n          setTipoProcedimento(response.data.tipoProcedimento);\r\n          setImagem(response.data.inserirArquivo);\r\n        })\r\n        .catch((error) => {\r\n          console.error('Erro ao buscar procedimento:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  function voltarCadastro() {\r\n    setAlterar(false);\r\n    limpar();\r\n  }\r\n\r\n  useEffect(run as any, [refresh]);\r\n\r\n  return (\r\n    <div className={styles.cadastroContainer}>\r\n      <div className={styles.visualizarBox}>\r\n        {data.length === 0 ? <span className={styles.titleVisualizar}>Sem procedimentos para serem exibidos</span> :\r\n          <div>\r\n            <span className={styles.titleVisualizar}>{data.length === 1 ? 'Procedimento' : 'Procedimentos'}</span>\r\n            <div className={styles.contentTable}>\r\n              <Table data={data} onDelete={handleDelete} onEdit={handleEdit} />\r\n            </div>\r\n          </div>\r\n        }\r\n      </div>\r\n      <div className={styles.cadastroBox}>\r\n        {alterar === true ? <h2>Alterar Procedimento</h2> : <h2>Cadastro de Procedimentos</h2>}\r\n        <div className={styles.formGroup}>\r\n          <label>Nome:</label>\r\n          {nomeError && <span className={styles.errorText}>{nomeError}</span>}\r\n          <input\r\n            type=\"text\"\r\n            value={nome}\r\n            onChange={(e) => setNome(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className={styles.formGroup}>\r\n          <label>Descrição:</label>\r\n          {descricaoError && <span className={styles.errorText}>{descricaoError}</span>}\r\n          <textarea\r\n            value={descricao}\r\n            onChange={(e) => setDescricao(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className={styles.formGroup}>\r\n          <label>Valor:</label>\r\n          {valorError && <span className={styles.errorText}>{valorError}</span>}\r\n          <input\r\n            type=\"number\"\r\n            value={valor}\r\n            onChange={(e) => setValor(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className={styles.formGroup}>\r\n          <label>Tipo de Procedimento:</label>\r\n          <select\r\n            value={tipoProcedimento}\r\n            onChange={(e) => {\r\n              if (e.target.value === \"1\") {\r\n                setTipoProcedimento(1);\r\n              } else if (e.target.value === \"2\") {\r\n                setTipoProcedimento(2);\r\n              }\r\n            }}\r\n          >\r\n            <option className={styles.option} value=\"1\">Corporal</option>\r\n            <option className={styles.option} value=\"2\">Facial</option>\r\n          </select>\r\n        </div>\r\n        <div className={styles.formGroup}>\r\n          <label>Imagem:</label>\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={handleImagemChange}\r\n          />\r\n        </div>\r\n        <div className={styles.formGroup}>\r\n          <label>Habilitado:</label>\r\n          {(habilitado === true ?\r\n            <LiaToggleOnSolid className={styles.toggle} onClick={() => setHabilitado(false)} /> :\r\n            <LiaToggleOffSolid className={styles.toggle} onClick={() => setHabilitado(true)} />)}\r\n        </div>\r\n        <button className={styles.cadastroButton} onClick={alterar === true ? handleClickAlterar : handleClickCadastro}>\r\n          {alterar === true ? <span>Alterar</span> : <span>Cadastrar</span>}\r\n        </button>\r\n        {alterar === true ?\r\n          <button onClick={voltarCadastro} className={styles.voltarButton}>\r\n            Voltar para o cadastro\r\n          </button> :\r\n          <Link to=\"/\">\r\n            <button className={styles.voltarButton}>\r\n              Voltar para o menu\r\n            </button>\r\n          </Link>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Procedimentos;","C:\\Users\\lucas\\Desktop\\beautysoft-frontend\\src\\Pages\\Home\\index.tsx",[],[],"C:\\Users\\lucas\\Desktop\\beautysoft-frontend\\src\\Pages\\Voucher\\index.tsx",["73"],[],"import React, { useEffect, useState } from 'react';\r\nimport styles from './voucher.module.css';\r\nimport axios from 'axios';\r\nimport { LiaToggleOffSolid, LiaToggleOnSolid } from 'react-icons/lia'\r\nimport { Link } from 'react-router-dom';\r\nimport Table from '../../Components/Table';\r\nimport Config from '../../Config.json';\r\n\r\nconst Voucher: React.FC = () => {\r\n  const [nome, setNome] = useState<string>('');\r\n  const [descricao, setDescricao] = useState<string>('');\r\n  const [data, setData] = useState([]);\r\n  const [row, setRow] = useState<number>();\r\n  const [habilitado, setHabilitado] = useState<boolean>(true);\r\n  const [refresh, setRefresh] = useState<boolean>(false);\r\n  const [alterar, setAlterar] = useState<boolean>(false);\r\n  const [nomeError, setNomeError] = useState<string | null>(null);\r\n  const [descricaoError, setDescricaoError] = useState<string | null>(null);\r\n\r\n  const handleClickCadastro = () => {\r\n\r\n    setNomeError(nome ? null : \"Nome é obrigatório!\");\r\n    setDescricaoError(descricao ? null : \"Descrição é obrigatória!\");\r\n\r\n    const filter = {\r\n      nome,\r\n      descricao,\r\n      campo: habilitado,\r\n    }\r\n\r\n    const apiUrl = `${Config.baseUrl}/api/Voucher`;\r\n\r\n    if (nome && descricao) {\r\n      axios.post(apiUrl, filter)\r\n        .then((response) => {\r\n          setRefresh(!refresh)\r\n          limpar();\r\n          console.log(response.data)\r\n        })\r\n        .catch((error) => {\r\n          console.error('Erro ao cadastrar voucher:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleClickAlterar = () => {\r\n\r\n    setNomeError(nome ? null : \"Nome é obrigatório!\");\r\n    setDescricaoError(descricao ? null : \"Descrição é obrigatória!\");\r\n\r\n    const filter = {\r\n      nome,\r\n      descricao,\r\n    }\r\n\r\n    const apiUrl = `${Config.baseUrl}/api/Voucher/${row}`;\r\n\r\n    axios.put(apiUrl, filter)\r\n      .then((_response) => {\r\n        console.log('Voucher alterado com sucesso!');\r\n        setRefresh(!refresh);\r\n        setAlterar(false);\r\n        limpar();\r\n      })\r\n      .catch((error) => {\r\n        console.error('Erro ao alterar voucher:', error);\r\n      });\r\n  };\r\n\r\n  const run = () => {\r\n    const apiUrl = `${Config.baseUrl}/api/Voucher`;\r\n\r\n    axios.get(apiUrl)\r\n      .then((response) => {\r\n        console.log('Vouchers exibidos com sucesso!');\r\n        const modifiedData = response.data.map((item: any) => {\r\n\r\n          console.log(response)\r\n          return {\r\n            Nome: item.nome,\r\n            id: item.id,\r\n            Descrição: item.descricao,\r\n          };\r\n        });\r\n\r\n        setData(modifiedData);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Erro ao buscar vouchers:', error);\r\n      });\r\n  };\r\n\r\n  function limpar() {\r\n    setNome('');\r\n    setDescricao('');\r\n  }\r\n\r\n  const handleDelete = (index: number) => {\r\n    const confirmDelete = window.confirm('Tem certeza de que deseja excluir este voucher?');\r\n\r\n    if (confirmDelete) {\r\n      const apiUrl = `${Config.baseUrl}/api/Voucher/${index}`;\r\n\r\n      axios.delete(apiUrl)\r\n        .then((_response) => {\r\n          setRefresh(!refresh);\r\n          console.log('Voucher deletado com sucesso!');\r\n        })\r\n        .catch((error) => {\r\n          console.error('Erro ao deletar voucher:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  function voltarCadastro() {\r\n    setAlterar(false);\r\n    limpar();\r\n  }\r\n\r\n  const handleEdit = (index: number) => {\r\n    setAlterar(true);\r\n    setRow(index);\r\n\r\n    const apiUrl = `${Config.baseUrl}/api/Voucher/${index}`;\r\n\r\n    axios.get(apiUrl)\r\n      .then((response) => {\r\n        setNome(response.data.nome);\r\n        setDescricao(response.data.descricao);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Erro ao buscar voucher:', error);\r\n      });\r\n  };\r\n\r\n  useEffect(run as any, [refresh]);\r\n\r\n  return (\r\n    <div className={styles.cadastroContainer}>\r\n      <div className={styles.visualizarBox}>\r\n        {data.length === 0 ? <span className={styles.titleVisualizar}>Sem vouchers para serem exibidos</span> :\r\n          <div>\r\n            <span className={styles.titleVisualizar}>{data.length === 1 ? 'Voucher' : 'Vouchers'}</span>\r\n            <div className={styles.contentTable}>\r\n              <Table data={data} onDelete={handleDelete} onEdit={handleEdit} />\r\n            </div>\r\n          </div>\r\n        }\r\n      </div>\r\n      <div className={styles.cadastroBox}>\r\n        <h2>Cadastro de Voucher</h2>\r\n        <div className={styles.formGroup}>\r\n          <label>Nome:</label>\r\n          {nomeError && <span className={styles.errorText}>{nomeError}</span>}\r\n          <input\r\n            type=\"text\"\r\n            value={nome}\r\n            onChange={(e) => setNome(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className={styles.formGroup}>\r\n          <label>Descrição:</label>\r\n          {descricaoError && <span className={styles.errorText}>{descricaoError}</span>}\r\n          <input\r\n            type=\"text\"\r\n            value={descricao}\r\n            onChange={(e) => setDescricao(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className={styles.formGroup}>\r\n          <label>Habilitado:</label>\r\n          {(habilitado === true ?\r\n            <LiaToggleOnSolid className={styles.toggle} onClick={() => setHabilitado(false)} /> :\r\n            <LiaToggleOffSolid className={styles.toggle} onClick={() => setHabilitado(true)} />)}\r\n        </div>\r\n        <button className={styles.cadastroButton} onClick={alterar === true ? handleClickAlterar : handleClickCadastro}>\r\n          {alterar === true ? <span>Alterar</span> : <span>Cadastrar</span>}\r\n        </button>\r\n        {alterar === true ?\r\n          <button onClick={voltarCadastro} className={styles.voltarButton}>\r\n            Voltar para o cadastro\r\n          </button> :\r\n          <Link to=\"/\">\r\n            <button className={styles.voltarButton}>\r\n              Voltar para o menu\r\n            </button>\r\n          </Link>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Voucher;","C:\\Users\\lucas\\Desktop\\beautysoft-frontend\\src\\Components\\Body\\index.tsx",["74","75","76","77"],[],"import React, { useState, useEffect } from \"react\";\r\nimport styles from \"./body.module.css\";\r\nimport Img1 from '../../img/Img1Wix.webp';\r\nimport Img2 from '../../img/img2Wix.webp';\r\nimport Img2_1 from '../../img/img2_1Wix.webp';\r\nimport sobreBrackground from '../../img/sobre-background.png';\r\nimport sobreImg from '../../img/imgSobre.png';\r\nimport Mensagem from \"../Mensagens\";\r\nimport { BsChevronCompactLeft, BsChevronCompactRight } from 'react-icons/bs'\r\nimport Config from '../../Config.json';\r\nimport axios from \"axios\";\r\n\r\nfunction Body() {\r\n  const [conteudoIndex, setConteudoIndex] = useState<number>(0);\r\n  const [currentImage, setCurrentImage] = useState<number>(0);\r\n  const [dataProcedimentos, setDataProcedimentos] = useState<any>();\r\n\r\n  async function run() {\r\n    const apiUrl = `${Config.baseUrl}/api/Procedimento`;\r\n\r\n    axios.get(apiUrl)\r\n      .then((response) => {\r\n        console.log('Procedimento cadastrado com sucesso!');\r\n        console.log('response', response);\r\n        setDataProcedimentos(response.data)\r\n      })\r\n      .catch((error) => {\r\n        console.error('Erro ao cadastrar procedimento:', error);\r\n      });\r\n  };\r\n\r\n  const conteudos = [\r\n    { p1: \"01\", p2: \"10% de Desconto com o cupom: vg123\" },\r\n    { p1: \"02\", p2: \"Descontos em compras acima de R$200\" },\r\n    { p1: \"03\", p2: \"A primeira consulta é por nossa conta\" },\r\n  ];\r\n\r\n  const messageSobre = \"Alta tecnologia Vitoria Garavazzo Estetica Avancada por um valor fixo Na Vitoria Garavazzo Estetica Avancada, nós planejamos seu protocolo de forma personalizada! Ao se tornar membro do Vitoria Garavazzo Estetica Avancada, você pode realizar outros tratamentos, além das suas sessões mensais, por valores especiais de acordo com o seu plano.\"\r\n\r\n  const textContent3 = \"Como profissional experiente em cuidados com a pele, trabalho para encontrar o melhor cuidado \"\r\n    + \"personalizado para você. Quer saber mais sobre os tratamentos que ofereço? Entre em contato e marque uma consulta.\";\r\n\r\n  const nextImage = () => {\r\n    if (currentImage < dataProcedimentos?.length - 1) {\r\n      setCurrentImage(currentImage + 1);\r\n    }\r\n  };\r\n\r\n  const prevImage = () => {\r\n    if (currentImage > 0) {\r\n      setCurrentImage(currentImage - 1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      // Atualizar o índice dos conteúdos a cada 5 segundos\r\n      setConteudoIndex((conteudoIndex + 1) % conteudos?.length);\r\n    }, 5000);\r\n\r\n    return () => {\r\n      clearInterval(interval); // Limpar o intervalo quando o componente é desmontado\r\n    };\r\n  }, [conteudoIndex]);\r\n\r\n  useEffect(() => { run() as any }, []);\r\n\r\n\r\n  return (\r\n    <div className={styles.body}>\r\n      <img src={Img1} className={styles.imgBody} />\r\n      <div className={styles.contentImg1}>\r\n        <p className={styles.contentP1Text}>\r\n          {conteudos[conteudoIndex].p1}\r\n        </p>\r\n        <p className={styles.contentP2Text}>\r\n          {\"/\"}\r\n        </p>\r\n        <p className={styles.contentP3Text}>\r\n          {conteudos[conteudoIndex].p2}\r\n        </p>\r\n        <div className={styles.contentButton}>\r\n          <p className={styles.textButton}>Comprar</p>\r\n        </div>\r\n      </div>\r\n      <div className={styles.contentImg2}>\r\n        <img src={Img2_1} className={styles.img2_1Body} />\r\n        <img src={Img2} className={styles.img2Body} />\r\n      </div>\r\n      <div className={styles.content3}>\r\n        <span className={styles.titleContent3}>Meus tratamentos</span>\r\n        <br />\r\n        <span className={styles.textContent3}>{textContent3}</span>\r\n      </div>\r\n      {dataProcedimentos?.length > 0 &&\r\n        <div className={styles.imagensText}>\r\n          <button className={styles.buttonPagination} onClick={prevImage} disabled={currentImage === 0}>\r\n            <BsChevronCompactLeft fontSize={50} />\r\n          </button>\r\n          {dataProcedimentos?.slice(currentImage, currentImage + 5).map((imagem: any) => (\r\n            <Mensagem\r\n              key={imagem.id}\r\n              imageUrl={imagem.url}\r\n              title={imagem.nome}\r\n              text={imagem.descricao}\r\n            />\r\n          ))}\r\n          <button className={styles.buttonPagination} onClick={nextImage} disabled={currentImage >= dataProcedimentos?.length - 5}>\r\n            <BsChevronCompactRight fontSize={50} />\r\n          </button>\r\n        </div>\r\n      }\r\n      <div className={styles.sobre} style={{ backgroundImage: `url(${sobreBrackground})`, backgroundPosition: 'right center', backgroundRepeat: 'no-repeat' }}>\r\n        <div className={styles.imgSobre} style={{ backgroundImage: `url(${sobreImg})`, backgroundRepeat: 'no-repeat' }} />\r\n        <h1 className={styles.titleSobre}>Sobre</h1>\r\n        <p className={styles.textSobre}>{messageSobre}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Body;\r\n","C:\\Users\\lucas\\Desktop\\beautysoft-frontend\\src\\Components\\Table\\index.tsx",[],[],"C:\\Users\\lucas\\Desktop\\beautysoft-frontend\\src\\Components\\Menu\\index.tsx",[],[],"C:\\Users\\lucas\\Desktop\\beautysoft-frontend\\src\\Pages\\Register\\index.tsx",["78"],[],"C:\\Users\\lucas\\Desktop\\beautysoft-frontend\\src\\Pages\\CadastroMensagem\\index.tsx",["79"],[],"C:\\Users\\lucas\\Desktop\\beautysoft-frontend\\src\\Components\\Mensagens\\index.tsx",[],[],{"ruleId":"80","severity":1,"message":"81","line":10,"column":10,"nodeType":"82","messageId":"83","endLine":10,"endColumn":14},{"ruleId":"80","severity":1,"message":"84","line":14,"column":10,"nodeType":"82","messageId":"83","endLine":14,"endColumn":16},{"ruleId":"85","severity":1,"message":"86","line":164,"column":3,"nodeType":"82","endLine":164,"endColumn":12},{"ruleId":"85","severity":1,"message":"86","line":136,"column":3,"nodeType":"82","endLine":136,"endColumn":12},{"ruleId":"85","severity":1,"message":"87","line":64,"column":6,"nodeType":"88","endLine":64,"endColumn":21,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":71,"column":7,"nodeType":"92","endLine":71,"endColumn":52},{"ruleId":"90","severity":1,"message":"91","line":87,"column":9,"nodeType":"92","endLine":87,"endColumn":59},{"ruleId":"90","severity":1,"message":"91","line":88,"column":9,"nodeType":"92","endLine":88,"endColumn":55},{"ruleId":"80","severity":1,"message":"81","line":11,"column":10,"nodeType":"82","messageId":"83","endLine":11,"endColumn":14},{"ruleId":"85","severity":1,"message":"86","line":166,"column":3,"nodeType":"82","endLine":166,"endColumn":12},"@typescript-eslint/no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'imagem' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect received a function whose dependencies are unknown. Pass an inline function instead.","React Hook useEffect has a missing dependency: 'conteudos?.length'. Either include it or remove the dependency array.","ArrayExpression",["93"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"94","fix":"95"},"Update the dependencies array to be: [conteudoIndex, conteudos?.length]",{"range":"96","text":"97"},[2582,2597],"[conteudoIndex, conteudos?.length]"]